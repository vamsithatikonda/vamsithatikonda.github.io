{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/education/education.component.ts","webpack:///src/app/education/education.component.html","webpack:///src/app/experience/experience.component.ts","webpack:///src/app/experience/experience.component.html","webpack:///src/app/experience/experience.service.ts","webpack:///src/app/portfolio/portfolio.component.ts","webpack:///src/app/portfolio/portfolio.component.html","webpack:///src/app/products/products-list.component.ts","webpack:///src/app/products/products-list.component.html","webpack:///src/app/skills/skills.component.ts","webpack:///src/app/skills/skills.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","pageTitle","selector","templateUrl","styleUrls","appRoutes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","EducationComponent","ExperienceComponent","expService","items","getItems","subscribe","next","error","err","errorMessage","ExperienceService","http","itemUrl","get","pipe","data","console","log","JSON","stringify","handleError","providedIn","PortfolioComponent","ProductListComponent","imageWidth","imageMargin","showImage","SkillsComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle = 'Razor Report';\n}\n","<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav mode=\"side\" opened class=\"example-container-left\">\n    <div class=\"container\">\n      <div class=\"row block\"><img alt=\"Vamsi Thatikonda\" src=\"assets/vamsi.ico\">\n        <h1 class=\"titleCssName\">VAMSI THATIKONDA</h1>\n        <h3 class=\"titleCss\">Software Engineer/UI Developer</h3>\n        <h4>I am a Full Stack Developer, Node Js developer and Front End\n          Developer creating awesome and effective Web pages for companies of all sizes around the globe. My recent\n          interests are Angular and React and designing Hybrid and progressive web apps with MEAN Stack and Spring Boot.\n          For\n          my recent projects please check out my git Hub. </h4>\n        <br />\n        <a href=\"https://myresumeupdated.s3.amazonaws.com/RAGHU+RAYAPUDI+RESUME.pdf\" download=\"\">\n          Click to download Resume</a>\n      </div>\n    </div>\n  </mat-sidenav>\n  <mat-sidenav-content>\n\n    <nav mat-tab-nav-bar>\n      <a mat-tab-link routerLink=\"/experience\" routerLinkActive #homeTab=\"routerLinkActive\" [active]=\"homeTab.isActive\">\n        My Experience\n      </a>\n      <a mat-tab-link routerLink=\"/skills\" routerLinkActive #homeTab=\"routerLinkActive\" [active]=\"homeTab.isActive\">\n        My Skills\n      </a>\n      <a mat-tab-link routerLink=\"/portfolio\" routerLinkActive #homeTab=\"routerLinkActive\" [active]=\"homeTab.isActive\">\n        My Portfolio & Projects\n      </a>\n      <a mat-tab-link routerLink=\"/education\" routerLinkActive #homeTab=\"routerLinkActive\" [active]=\"homeTab.isActive\">\n        My Education\n      </a>\n      <a mat-tab-link routerLink=\"/products\" routerLinkActive #homeTab=\"routerLinkActive\" [active]=\"homeTab.isActive\">\n        Products\n      </a>\n\n    </nav>\n\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './products/products-list.component';\nimport { ExperienceComponent } from './experience/experience.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { PortfolioComponent } from './portfolio/portfolio.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { EducationComponent } from './education/education.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ExperienceService } from './experience/experience.service';\nconst appRoutes: Routes = [\n  { path: 'welcome', component: ExperienceComponent },\n  { path: 'experience', component: ExperienceComponent },\n  { path: 'skills', component: SkillsComponent },\n  { path: 'portfolio', component: PortfolioComponent },\n  { path: 'education', component: EducationComponent },\n  { path: 'products', component: ProductListComponent },\n  {\n    path: '',\n    redirectTo: '/welcome',\n    pathMatch: 'full'\n  },\n  { path: '**', component: ExperienceComponent }\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ExperienceComponent,\n    PortfolioComponent,\n    SkillsComponent,\n    EducationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n    ),\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatSidenavModule,\n    MatGridListModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-education',\n  templateUrl: './education.component.html',\n  styleUrls: ['./education.component.css']\n})\nexport class EducationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>education works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ExperienceService } from './experience.service';\nimport { IExperienceNew } from './experience';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent implements OnInit {\n\n  items: IExperienceNew[] = [];\n  errorMessage: string;\n  constructor(private expService: ExperienceService) {\n  }\n  ngOnInit(): void {\n    this.expService.getItems().subscribe({\n      next: items => this.items = items,\n      error: err => this.errorMessage = err\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">&nbsp;</div>\n    <div class=\"row\" *ngFor='let item of items'>\n        <div class=\"col\">\n            <div class=\"ExperiencePanel_media__3C7pE media\"><a href={{item.url}} class=\"media-left media-top\"><img\n                        src=\"{{item.logo}} \" alt=\"{{item.companyName}}\" class=\"media-object\" height=\"150\"\n                        width=\"150\"></a>\n                <span style='margin-right:1.25em; display:inline-block;'></span>\n                <div class=\"media-body\">\n                    <h4 class=\"media-heading\"><a href={{item.url}}>{{item.companyName}}</a>\n                    </h4>\n                    <h5> {{item.rolesTitle}}</h5>\n                    <span> {{item.startDate}} -\n                        {{item.endDate}}</span>\n                    <p>\n                        {{item.location}}</p>\n                    <span>{{item.description}} </span>\n                    <span style='margin-right:1.25em; display:inline-block;'></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { IExperienceNew } from './experience';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExperienceService {\n    constructor(private http: HttpClient) { }\n    itemUrl = \"../../assets/experience.json\";\n    getItems(): Observable<IExperienceNew[]> {\n\n        return this.http.get<IExperienceNew[]>(this.itemUrl).pipe(\n            tap(data => console.log(JSON.stringify(data))),\n            catchError(this.handleError)\n        );\n    }\n\n\n    private handleError(err: HttpErrorResponse) {\n        console.log(err);\n        return throwError(\"something wrong\");\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.css']\n})\nexport class PortfolioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>portfolio works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    templateUrl: './products-list.component.html',\n})\nexport class ProductListComponent {\n    pageTitle = 'Product List';\n    imageWidth = 50;\n    imageMargin = 2;\n    showImage = false;\n    errorMessage = '';\n}","<div class='card'>\n    <div class='card-header'>\n        {{pageTitle}}\n    </div>\n    <div class='card-body'>\n        <div class='row'>\n            <div class='col-md-2'>Filter by:</div>\n            <div class='col-md-4'>\n                <input type='text' />\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <h4>Filtered by: </h4>\n            </div>\n        </div>\n        <div class='table-responsive'>\n            <table class='table'>\n                <thead>\n                    <tr>\n                        <th>\n                            <button class='btn btn-primary'>\n                                {{showImage ? 'Hide' : 'Show'}} Image\n                            </button>\n                        </th>\n                        <th>Product</th>\n                        <th>Code</th>\n                        <th>Available</th>\n                        <th>Price</th>\n                        <th>5 Star Rating</th>\n                    </tr>\n                </thead>\n                <tbody>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>skills works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}